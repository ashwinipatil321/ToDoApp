package com.bridgelabz.User.SocialLogin;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.core.Form;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.jboss.resteasy.client.jaxrs.ResteasyClient;
import org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder;
import org.jboss.resteasy.client.jaxrs.ResteasyWebTarget;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.sun.xml.internal.ws.api.ComponentFeature.Target;


public class GoogleConnection {
	
	private static final String googleClientId="127748931255510";
	private static final String googleSecretId="16a588db020442c7cdea6f1fb081ed85";
	public static final String Redirect_URI = "http://localhost:8080/ToDoProject/connectGoogle";
	public String GmailGetUserUrl = "https://www.googleapis.com/plus/v1/people/me";

	public String getGoogleURL(String unid) {

		String googleLoginURL = "";

		try {
			
			googleLoginURL = "https://accounts.google.com/o/oauth2/auth?client_id=" + googleClientId + "&redirect_uri="
					+ URLEncoder.encode(Redirect_URI, "UTF-8") + "&state=" + unid
					+ "&response_type=code&scope=profile email&approval_prompt=force&access_type=offline";
		
		} catch (UnsupportedEncodingException e) {
			
			e.printStackTrace();
		}
		return googleLoginURL;
	}
	public String getAccessToken(String authCode)
	{
		String accessTokenURL="https://accounts.google.com/o/oauth2/token";
		ResteasyClient restCall = new ResteasyClientBuilder().build();
		ResteasyWebTarget resteasyWebTarget= restCall.target(accessTokenURL);
		Form form=new Form();
		
		form.param("client_id", googleClientId);
		form.param("client_secret", googleSecretId);
		form.param("redirect_uri", Redirect_URI);
		form.param("code", authCode);
		form.param("grant_type", "authorization_code");
		
		Response response = target.request().accept(MediaType.APPLICATION_JSON).post(Entity.form(form));

		String token = response.readEntity(String.class);
		return authCode;
		
	}
}
