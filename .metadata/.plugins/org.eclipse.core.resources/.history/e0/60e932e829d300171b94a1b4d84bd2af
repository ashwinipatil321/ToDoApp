package com.bridgelabz.User.Controller;

import java.io.IOException;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.bridgelabz.User.Service.UserService;
import com.bridgelabz.User.SocialLogin.GoogleConnection;
import com.bridgelabz.User.Utility.Token;
import com.bridgelabz.User.model.Response;
import com.bridgelabz.User.model.User;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

@RestController
public class GoogleLoginController {

	@Autowired
	private GoogleConnection googleConnection;

	@Autowired
	private UserService userService;

	Response myResponse=new Response();


	@RequestMapping(value="/logInWithGoogle")
	public void googleConnection(HttpServletRequest request, HttpServletResponse response) throws IOException {

		String unid=UUID.randomUUID().toString();
		request.getSession().setAttribute("STATE", unid);
		String googleLogInURL=googleConnection.getGoogleURL(unid);
		response.sendRedirect(googleLogInURL);
		return;
	}

	@RequestMapping(value="/connectGoogle")
	public void redirectFromGoogle(HttpServletRequest request, HttpServletResponse response) throws IOException {
		String sessionState = (String) request.getSession().getAttribute("STATE");
		String googlestate = request.getParameter("state");

		if (sessionState == null || !sessionState.equals(googlestate)) {

			response.sendRedirect("loginWithGoogle");

		}

		String error = request.getParameter("error");

		if (error != null && error.trim().isEmpty()) {

			response.sendRedirect("login");
		}
		String authCode=request.getParameter("code");
		String googleaccessToken = googleConnection.getAccessToken(authCode);
		JsonNode profile = googleConnection.getUserProfile(googleaccessToken);

		System.out.println("google profile :"+profile);
		System.out.println("google profile :" + profile.get("displayName"));
		System.out.println("user email in google login :" + profile.get("emails").get(0).get("value").asText()); //asText() is use to remove outer text.
		System.out.println("google profile :" + profile.get("image").get("url"));
		User user = userService.getUserByEmail(profile.get("emails").get(0).get("value").asText());
		
		
		
		if (user == null) {

			user = new User();
			user.setUserFirstName(profile.get("displayName").asText());
			user.setEmail(profile.get("emails").get(0).get("value").asText());
			user.setActivated(true);
			userService.createUser(user);
			myResponse.setResponseMessage(googleaccessToken);

		} 
		else {

			System.out.println("User is Already Exits in DataBase....");
			myResponse.setResponseMessage(googleaccessToken);
		}
	}
}
