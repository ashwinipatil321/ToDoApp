package com.bridgelabz.User.Controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.bridgelabz.User.Service.UserService;
import com.bridgelabz.User.model.UserDetails;



public class UserController
{
@Autowired
UserService userService;

@RequestMapping(value = "/register", method = RequestMethod.POST, produces = { MediaType.APPLICATION_JSON_VALUE,
		MediaType.APPLICATION_XML_VALUE })
public ResponseEntity<Void> registrationUser(@RequestBody UserDetails user, HttpServletRequest request,
		HttpSession session, HttpServletResponse response) {
	if (user.getEmail() != null && user.getUserFirstName() != null &&  user.getUserFirstName() != null && user.getMobileNumber() != null
			&& user.getPassword() != null) {
	
		String FirstName = user.getUserFirstName();
		String LastName=user.getUserLastName();
		String email = user.getEmail();
		String phoneNumber = user.getMobileNumber();
		String password = user.getPassword();

		String error1 = Validation.checkName(name);
		String error2 = Validation.checkemail(email);
		String error3 = Validation.checkphoneNumber(phoneNumber);
		String error4 = Validation.checkpassword(password);

		if (error1 == "valid" && error2 == "valid" && error3 == "valid" && error4 == "valid") {
			String passwordEncrypt = MD5Encryption.encrypt(password);
			user.setPassword(passwordEncrypt);
			int id = userService.createUser(user);
			if (id > 0) {
				String url = "http://localhost:8082/TodoApp/activate/" + id;
				String to = "patilrag21@gmail.com";
				String msg = "Click on link to activate account  " + url;
				String subject = "Subject abc";
				/*
				 * String token = Token.generateToken("Activation", email,
				 * user.getId()); response.setHeader("Activation", token);
				 */
				SendMail.sendMail(to, subject, msg);
				System.out.println("mail send");
				return new ResponseEntity<Void>(HttpStatus.OK);
			}
			return new ResponseEntity<Void>(HttpStatus.CONFLICT);

		} else
			return new ResponseEntity<Void>(HttpStatus.CONFLICT);
	}
	return new ResponseEntity<Void>(HttpStatus.CONFLICT);
}
