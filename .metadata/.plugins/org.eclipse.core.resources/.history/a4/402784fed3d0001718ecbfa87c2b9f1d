package com.bridgelabz.User.Controller;

import java.util.Date;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.bridgelabz.User.Service.NoteService;
import com.bridgelabz.User.Service.UserService;
import com.bridgelabz.User.Utility.Token;
import com.bridgelabz.User.model.Note;
import com.bridgelabz.User.model.User;
import com.sun.corba.se.impl.naming.pcosnaming.NameService;

public class NoteController {

	@Autowired
	NoteService notesService;
	@Autowired
	UserService userService;
	private Note note;

	@RequestMapping(value = "/saveNote", method = RequestMethod.POST)
	public ResponseEntity<Set<Note>> saveNote(HttpSession session, @RequestBody Note note, HttpServletRequest request,
			HttpServletResponse response) {
		this.note = note;
		String token = request.getHeader("login");
		int id = Token.verify(token);
		User user = userService.getUserById(id);
		Date date = new Date();
		if (user != null) {
			if (id > 0) {
				boolean isActive = user.getActivated();
				if (isActive) {
					note.setUser(user);
					note.setCreateDate(date);
					note.setLastUpdated(date);
					notesService.saveNote(note);
					return new ResponseEntity<Set<Note>>(HttpStatus.OK);
				}
				return new ResponseEntity<Set<Note>>(HttpStatus.CONFLICT);
			} else
				return new ResponseEntity<Set<Note>>(HttpStatus.CONFLICT);
		}
		return new ResponseEntity<Set<Note>>(HttpStatus.CONFLICT);
	}
}
